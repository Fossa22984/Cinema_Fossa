@model Online_Cinema_Models.View.RoomViewModel
@{
    @inject Microsoft.AspNetCore.Identity.UserManager<Online_Cinema_Domain.Models.IdentityModels.User> UserManager
    var user = await UserManager.GetUserAsync(User);

    if (@Model.OwnerId == user.Id){ <input Id="isOwner" value="true" type="hidden" />}
    else {<input Id="isOwner" value="false" type="hidden" /> }
}

<link href="//amp.azure.net/libs/amp/2.1.0/skins/amp-default/azuremediaplayer.min.css" rel="stylesheet">
<script src="//amp.azure.net/libs/amp/2.1.0/azuremediaplayer.min.js"></script>
<link href="~/css/cinemaroom.css" rel="stylesheet" />

<style>
    .vjs-progress-holder {
        visibility: visible!important;
    }

    .amp-controlbaricons-middle {
        visibility: visible !important;
    }
</style>

<input asp-for="Id" type="hidden" />
<input asp-for="OwnerId" type="hidden" />
<input id="sessionId" type="hidden" />
<div class="mycontent pt-1 mb-3" id="videoDiv" style="width: 75vw;">
    <div class="row p-0 m-0" style="height: 82vh; width:100%;">
        <video id="video" class="azuremediaplayer amp-default-skin" controls autoplay style="width: 100%; height:100%" data-setup="{}">
            <source type="video/mp4" src="~/Movies/Background Video.mp4" />
        </video>
    </div>
    <div class="row m-3 mb-5">
        <div class="w-100">
            <img src=@String.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(Model.RoomImage)) class="clickOnButton" style=" width: 50px; height: 50px; object-fit: cover; border-radius: 50%; border:solid 2px  #3eaaaf; float:left; margin-right:10px; ">
            <h2 class="text-white">@Model.RoomName</h2>
            <div class="d-flex flex-row bd-highlight mb-3">
                <h4 class="text-white">В данный момент идёт: &nbsp; </h4>
                <h4 class="text-white" id="movieTitle"></h4>
            </div>
        </div>
    </div>
</div>
<div id="chatDiv" style=" background: #18181b; width: 25vw">
    <div class=" cardss" style="  height: 95vh!important; ">
        <div>
            <div class="d-flex flex-row justify-content-center">
                <p class="text-white" style=" overflow-wrap: break-word;">ЧАТ</p>
            </div>
        </div>
        <div class="mycontent1" id="ChatRoom" data-scroll="true" onscroll="ScrollChat(this)" style=" overflow-wrap: break-word;">
        </div>
        <div>
            <textarea class="form-control text-white" id="MessageTextarea" onkeyup="checkChatMessage()"></textarea>
            <button id="sendMessageButton" class="btn btn-dark mt-4" style="background-color: #3eaaaf; width:100%;" disabled>Чат</button>
        </div>
    </div>
    <input type="hidden" id="ChatId" value="@Model.Id" />
</div>


@section Scripts{
    <script>

        function GetAllSessions(e) {
            $.ajax({
                type: 'GET',
                data: { "cinemaRoomId": $("#Id").val() },
                url: "/CinemaRoom/_ListSessions",
                success: function (result) {
                    $("#listSessionsDiv").html(result);
                }
            });
            $("#ajax").val("");
        }

        function SearchByDate(e) {
            $.ajax({
                type: 'GET',
                data: {
                    "cinemaRoomId": $("#Id").val(),
                    "dateSession": $("#dateSession").val()
                },
                url: "/CinemaRoom/_ListSessions",
                success: function (result) {
                    if (result != "") $("#listSessionsDiv").html(result);
                    else $("#listSessionsDiv").html(result);
                }
            });
        }

        function ScrollChat(e) {
            shouldScroll = messages.scrollTop + messages.clientHeight === messages.scrollHeight;
            if (!shouldScroll) {
                $(e).attr("data-scroll", "false");
            }
            else {
                $(e).attr("data-scroll", "true");
            }
        }

        const messages = document.getElementById('ChatRoom');

        function getMessages() {
            shouldScroll = messages.scrollTop + messages.clientHeight === messages.scrollHeight;
            if (!shouldScroll && $(messages).attr("data-scroll") == "true") {
                scrollToBottom();
            }
        }

        function scrollToBottom() {
            messages.scrollTop = messages.scrollHeight;
        }

        function checkChatMessage() {
            let res = $('#MessageTextarea').val();
            if (res != 0) $('#sendMessageButton').removeAttr('disabled');
            else $('#sendMessageButton').attr('disabled', 'disabled');
        }

        $("textarea").each(function () {
            this.setAttribute("style", "height:" + (this.scrollHeight) + "px;overflow-y:hidden;");
        }).on("input", function () {

            this.style.height = "auto";
            this.style.height = (this.scrollHeight) + "px";
            if (parseInt(this.style.height) > 150) {
                this.style.height = "150px"
            }
        });
        function showChat(e) {
            if ($(e).attr("data-open") == "true") {
                $("#chatDiv").attr("hidden", "hidden");
                $(e).attr("data-open", "false");
                $("#videoDiv").css("width", "100vw");
            }
            else if ($(e).attr("data-open") == "false") {
                $("#chatDiv").removeAttr("hidden");
                $(e).attr("data-open", "true");
                $("#videoDiv").css("width", "75vw");
            }
        }

        function addNewButton(data) {

            var myPlayer = data.player,
                controlBar,
                newElement = document.createElement('button'),
                newLink = document.createElement('span');

            newElement.id = data.id;
            newElement.className = 'vjs-control vjs-button chat-button';
            newElement.type = "button"

            newLink.innerHTML = "<i class='fa " + data.icon + " line-height' aria-hidden='true' style='color:#3eaaaf'></i>";
            newElement.appendChild(newLink);
            rightPanel = $(".amp-controlbaricons-right");
            controlBar = document.getElementsByClassName('vjs-control-bar')[0];

            insertBeforeNode = document.getElementsByClassName('vjs-fullscreen-control')[0];
            $('.vjs-control-bar').append(newElement);

            return newElement;
        }

        function addSourceToVideo(element, src, type) {
            element.innerHTML = "";
            var source = document.createElement('source');

            source.src = src;
            source.type = type;

            element.appendChild(source);
        }

        window.onload = function () {
            addNewButton({ player: "video", icon: "fas fa-comment-alt", id: "buttonChat" });
            $("#buttonChat").attr("data-open", "true");
            $("#buttonChat").on("click", function () { showChat(this); })
        };

        $(function () {
            IsEnded = true;

            var myplayer = videojs('video');

            if($("#isOwner").val()=="false")
                myplayer.controlBar.progressControl.hide();





            var connection = new signalR.HubConnectionBuilder().withUrl("/chat").build();

            connection.on("Send", function (user, message) {
                var msg = "<p class='text-white m-0' style='overflow-wrap: break-word;' ><span style='color:#3eaaaf'>" + user + "</span>: " + message + "</p >";
                $("#ChatRoom").append(msg)
                getMessages();

            });

            var currentTime;
            var startTime;
           


            connection.start().then(function () {
                var room = $("#OwnerId").val();
                var user = '@user.UserName';
                connection.invoke("SendMessage", user, "", room, true).catch(function (err) {
                    return console.error(err.toString());
                });
                event.preventDefault();
            }).catch(function (err) {
                return console.error(err.toString());
            });

            $("#sendMessageButton").on("click", function () {
                var room = $("#ChatId").val();
                var user = '@user.UserName';
                var message = $("#MessageTextarea").val();
                connection.invoke("SendMessage", user, message, room, false).catch(function (err) {
                    return console.error(err.toString());
                });
                event.preventDefault();
                $("#MessageTextarea").val("");
                $('#sendMessageButton').attr('disabled', 'disabled');
            });

            var self = this;
            this.player = videojs('video');

            this.player.on("ended", function () {
                $("#sessionId").val("");
                $("#movieTitle").text("");
                if (self.player.src() != "/Movies/Background Video.mp4")
                    self.player.src({ type: 'video/mp4', src: "/Movies/Background Video.mp4" });

                IsEnded = true;
                self.player.play();

            });


            this.player.on("pause", function () {
                connection.invoke("SendPause", room).catch(function (err) {
                    return console.error(err.toString());
                });             
            });
            connection.on("GetPause", function (user, message) {
                self.player.play();
            });

            this.player.on("play", function () {
                connection.invoke("SendPlay", room).catch(function (err) {
                    return console.error(err.toString());
                });
            });

            connection.on("GetPlay", function (user, message) {
                self.player.play();
            });

        })
    </script>

}